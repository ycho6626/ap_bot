name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint-and-typecheck:
    name: Lint and TypeCheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: corepack enable pnpm
      - uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false
          cache: true
      - run: pnpm install --frozen-lockfile
      - run: pnpm --filter @ap/shared build
      - run: pnpm lint
      - run: pnpm typecheck

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: lint-and-typecheck
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: corepack enable pnpm
      - uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false
          cache: true
      - run: pnpm install --frozen-lockfile
      - run: pnpm build

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: lint-and-typecheck
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: corepack enable pnpm
      - uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false
          cache: true
      - run: pnpm install --frozen-lockfile
      - run: pnpm coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./packages/*/coverage/lcov.info

  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: corepack enable pnpm
      - uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false
          cache: true
      - run: pnpm install --frozen-lockfile
      - run: pnpm build
      - run: pnpm --filter @ap/web test:e2e:smoke:ci

  python-tests:
    name: Python Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install Poetry
        uses: snok/install-poetry@v1
      - name: Install dependencies
        run: |
          cd py/verifier && poetry install
          cd ../processor && poetry install
      - name: Run verifier tests
        run: cd py/verifier && poetry run pytest -q
      - name: Run processor tests
        run: cd py/processor && poetry run pytest -q

  upload-artifacts:
    name: Upload Artifacts
    runs-on: ubuntu-latest
    needs: [build, test, e2e]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Upload OpenAPI spec
        uses: actions/upload-artifact@v3
        with:
          name: openapi-spec
          path: apps/api-gateway/openapi.yaml
