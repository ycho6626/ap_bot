openapi: 3.0.0
info:
  title: AP Calculus Bot API
  description: |
    API Gateway for AP Calculus AB/BC tutoring bot with verified answers.
    
    This API provides endpoints for:
    - Knowledge base search with hybrid retrieval
    - VAM (Verified Answer Mode) coaching
    - Human-in-the-Loop review system
    - Stripe webhook handling for payments
    - Health monitoring and configuration
    
    ## Authentication
    Most endpoints require authentication via Bearer token or API key.
    Webhook endpoints use signature verification.
    
    ## Rate Limiting
    Different endpoints have different rate limits:
    - Coach endpoint: 10 requests/minute
    - Review endpoints: 50 requests/minute  
    - Webhook endpoints: 1000 requests/minute
    - Other endpoints: 100 requests/minute
    
    ## Response Headers
    - `X-Answer-Verified`: Boolean indicating if answer was verified
    - `X-Answer-Trust`: Trust score (0-1) for the answer
    - `X-Request-ID`: Unique request identifier for tracing
  version: 0.1.0
  contact:
    name: AP Calculus Bot Support
    email: support@apcalculusbot.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3001
    description: Development server
  - url: https://api.apcalculusbot.com
    description: Production server

paths:
  /health:
    get:
      summary: Basic health check
      description: Returns basic health status of the API Gateway
      tags:
        - Health
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: healthy
                  timestamp:
                    type: string
                    format: date-time
                  uptime:
                    type: number
                    description: Uptime in seconds
                  environment:
                    type: string
                    example: development
                  version:
                    type: string
                    example: 0.1.0
        '503':
          description: Service is unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /health/detailed:
    get:
      summary: Detailed health check
      description: Returns detailed health status including dependencies
      tags:
        - Health
      responses:
        '200':
          description: Service and dependencies are healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: healthy
                  timestamp:
                    type: string
                    format: date-time
                  uptime:
                    type: number
                  environment:
                    type: string
                  version:
                    type: string
                  dependencies:
                    type: object
                    properties:
                      supabase:
                        type: string
                        example: healthy
                      openai:
                        type: string
                        example: healthy
                      verifier:
                        type: string
                        example: healthy
                      stripe:
                        type: string
                        example: healthy
        '503':
          description: Service or dependencies are unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /health/ready:
    get:
      summary: Readiness check
      description: Kubernetes readiness probe endpoint
      tags:
        - Health
      responses:
        '200':
          description: Service is ready to accept traffic
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ready
                  timestamp:
                    type: string
                    format: date-time
        '503':
          description: Service is not ready
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /health/live:
    get:
      summary: Liveness check
      description: Kubernetes liveness probe endpoint
      tags:
        - Health
      responses:
        '200':
          description: Service is alive
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: alive
                  timestamp:
                    type: string
                    format: date-time

  /kb/search:
    get:
      summary: Search knowledge base
      description: |
        Search the knowledge base for relevant content using hybrid retrieval
        combining textual search and vector similarity.
      tags:
        - Knowledge Base
      parameters:
        - name: subject
          in: query
          required: false
          schema:
            type: string
            enum: [calc]
            default: calc
          description: Subject to search (currently only calc supported)
        - name: examVariant
          in: query
          required: false
          schema:
            type: string
            enum: [calc_ab, calc_bc]
            default: calc_ab
          description: Exam variant to search for
        - name: query
          in: query
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 500
          description: Search query
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 10
          description: Maximum number of results to return
        - name: minScore
          in: query
          required: false
          schema:
            type: number
            minimum: 0
            maximum: 1
            default: 0.1
          description: Minimum relevance score for results
        - name: includePartitions
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
          description: Partitions to include in search (public_kb, paraphrased_kb, private_kb)
        - name: excludePartitions
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
          description: Partitions to exclude from search
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/SearchResult'
                  metadata:
                    type: object
                    properties:
                      query:
                        type: string
                      examVariant:
                        type: string
                      totalResults:
                        type: number
                      maxScore:
                        type: number
                      searchTime:
                        type: number
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /kb/document/{id}:
    get:
      summary: Get document by ID
      description: Retrieve a specific knowledge base document by its ID
      tags:
        - Knowledge Base
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Document ID
      responses:
        '200':
          description: Document found
          content:
            application/json:
              schema:
                type: object
                properties:
                  document:
                    $ref: '#/components/schemas/KbDocument'
        '404':
          description: Document not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /coach:
    post:
      summary: Process student question
      description: |
        Process a student question using VAM (Verified Answer Mode).
        Returns verified answers with trust scores and sources.
      tags:
        - Coach
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - question
              properties:
                subject:
                  type: string
                  enum: [calc]
                  default: calc
                  description: Subject (currently only calc supported)
                examVariant:
                  type: string
                  enum: [calc_ab, calc_bc]
                  default: calc_ab
                  description: Exam variant
                mode:
                  type: string
                  enum: [vam, standard]
                  default: vam
                  description: Processing mode
                question:
                  type: string
                  minLength: 1
                  maxLength: 2000
                  description: Student question
                context:
                  type: object
                  properties:
                    topic:
                      type: string
                      description: Topic context
                    subtopic:
                      type: string
                      description: Subtopic context
                    difficulty:
                      type: string
                      description: Difficulty level
                    studentLevel:
                      type: string
                      enum: [beginner, intermediate, advanced]
                      description: Student level
                    previousQuestions:
                      type: array
                      items:
                        type: string
                      description: Previous questions in session
                    sessionId:
                      type: string
                      description: Session identifier
                  description: Additional context for the question
      responses:
        '200':
          description: Question processed successfully
          headers:
            X-Answer-Verified:
              description: Whether the answer was verified
              schema:
                type: boolean
            X-Answer-Trust:
              description: Trust score of the answer (0-1)
              schema:
                type: number
                minimum: 0
                maximum: 1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoachResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /coach/health:
    get:
      summary: Coach service health check
      description: Check the health of the coach service and its dependencies
      tags:
        - Coach
      responses:
        '200':
          description: Coach service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: healthy
                  timestamp:
                    type: string
                    format: date-time
                  services:
                    type: object
                    properties:
                      vam:
                        type: string
                        example: healthy
                      retrieval:
                        type: string
                        example: healthy
                      verification:
                        type: string
                        example: healthy
                      llm:
                        type: string
                        example: healthy
        '503':
          description: Coach service is unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /coach/config:
    get:
      summary: Get coach configuration
      description: Get the current coach configuration and supported options
      tags:
        - Coach
      responses:
        '200':
          description: Coach configuration
          content:
            application/json:
              schema:
                type: object
                properties:
                  vam:
                    type: object
                    properties:
                      minTrustThreshold:
                        type: number
                        example: 0.92
                      maxRetries:
                        type: number
                        example: 1
                      enableCanonicalFirst:
                        type: boolean
                        example: true
                      enableRetrieval:
                        type: boolean
                        example: true
                      enableVerification:
                        type: boolean
                        example: true
                      enablePostprocessing:
                        type: boolean
                        example: true
                      cacheVerifiedOnly:
                        type: boolean
                        example: true
                      suggestionsCount:
                        type: number
                        example: 3
                  supportedSubjects:
                    type: array
                    items:
                      type: string
                    example: [calc]
                  supportedVariants:
                    type: array
                    items:
                      type: string
                    example: [calc_ab, calc_bc]

  /review:
    post:
      summary: Submit case for review
      description: Submit a case for human review in the HiTL system
      tags:
        - Review
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - question
                - answer
                - examVariant
                - trustScore
                - confidence
              properties:
                question:
                  type: string
                  minLength: 1
                  maxLength: 2000
                  description: Student question
                answer:
                  type: string
                  minLength: 1
                  maxLength: 10000
                  description: Generated answer
                examVariant:
                  type: string
                  enum: [calc_ab, calc_bc]
                  description: Exam variant
                trustScore:
                  type: number
                  minimum: 0
                  maximum: 1
                  description: Trust score of the answer
                confidence:
                  type: number
                  minimum: 0
                  maximum: 1
                  description: Confidence score of the answer
                sources:
                  type: array
                  items:
                    $ref: '#/components/schemas/Source'
                  description: Sources used for the answer
                metadata:
                  type: object
                  description: Additional metadata
      responses:
        '201':
          description: Case submitted for review
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Review case ID
                  status:
                    type: string
                    example: pending
                  message:
                    type: string
                    example: Case submitted for review
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /review:
    get:
      summary: Get review cases
      description: Get pending review cases (teacher only)
      tags:
        - Review
      parameters:
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum: [pending, approved, rejected, needs_revision]
            default: pending
          description: Filter by status
        - name: examVariant
          in: query
          required: false
          schema:
            type: string
            enum: [calc_ab, calc_bc]
          description: Filter by exam variant
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Maximum number of cases to return
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
          description: Number of cases to skip
      responses:
        '200':
          description: Review cases retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  cases:
                    type: array
                    items:
                      $ref: '#/components/schemas/ReviewCase'
                  pagination:
                    type: object
                    properties:
                      total:
                        type: number
                      limit:
                        type: number
                      offset:
                        type: number
                      hasMore:
                        type: boolean
        '400':
          description: Invalid query parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /review/resolve:
    post:
      summary: Resolve review case
      description: Resolve a review case (teacher only)
      tags:
        - Review
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - caseId
                - action
              properties:
                caseId:
                  type: string
                  description: Review case ID
                action:
                  type: string
                  enum: [approve, reject, request_revision]
                  description: Action to take
                feedback:
                  type: string
                  maxLength: 1000
                  description: Feedback for the case
                correctedAnswer:
                  type: string
                  maxLength: 10000
                  description: Corrected answer (for request_revision)
                tags:
                  type: array
                  items:
                    type: string
                  description: Tags for categorization
      responses:
        '200':
          description: Case resolved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Review case ID
                  status:
                    type: string
                    description: New status of the case
                  message:
                    type: string
                    description: Success message
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '404':
          description: Review case not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /webhooks/stripe:
    post:
      summary: Stripe webhook endpoint
      description: Handle Stripe webhook events for payment processing
      tags:
        - Webhooks
      parameters:
        - name: stripe-signature
          in: header
          required: true
          schema:
            type: string
          description: Stripe signature for webhook verification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Stripe webhook payload
      responses:
        '200':
          description: Webhook processed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Webhook processed successfully
        '400':
          description: Invalid webhook payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Invalid signature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /webhooks/stripe/health:
    get:
      summary: Stripe webhook health check
      description: Health check for Stripe webhook endpoint
      tags:
        - Webhooks
      responses:
        '200':
          description: Webhook endpoint is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: healthy
                  timestamp:
                    type: string
                    format: date-time
                  provider:
                    type: string
                    example: stripe

  /webhooks/stripe/config:
    get:
      summary: Stripe webhook configuration
      description: Get Stripe webhook configuration and supported events
      tags:
        - Webhooks
      responses:
        '200':
          description: Webhook configuration
          content:
            application/json:
              schema:
                type: object
                properties:
                  provider:
                    type: string
                    example: stripe
                  supportedEvents:
                    type: array
                    items:
                      type: string
                    example:
                      - invoice.payment_succeeded
                      - customer.subscription.updated
                      - customer.subscription.deleted
                      - customer.subscription.created
                  signatureVerification:
                    type: boolean
                    example: true
                  idempotency:
                    type: boolean
                    example: true

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for API authentication
    apiKey:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for service-to-service authentication

  schemas:
    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            message:
              type: string
              description: Error message
            statusCode:
              type: number
              description: HTTP status code
            stack:
              type: string
              description: Stack trace (development only)
      required:
        - error

    ValidationError:
      type: object
      properties:
        error:
          type: object
          properties:
            message:
              type: string
              example: Invalid request parameters
            statusCode:
              type: number
              example: 400
            validation:
              type: object
              description: Validation error details
      required:
        - error

    KbDocument:
      type: object
      properties:
        id:
          type: string
          description: Document ID
        content:
          type: string
          description: Document content
        subject:
          type: string
          example: calc
        exam_variant:
          type: string
          nullable: true
          enum: [calc_ab, calc_bc]
        partition:
          type: string
          enum: [public_kb, paraphrased_kb, private_kb]
        topic:
          type: string
          nullable: true
        subtopic:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - content
        - subject
        - partition
        - created_at
        - updated_at

    SearchResult:
      type: object
      properties:
        document:
          $ref: '#/components/schemas/KbDocument'
        score:
          type: number
          description: Relevance score (0-1)
        snippet:
          type: string
          description: Relevant snippet from the document
        provenance:
          type: object
          properties:
            source:
              type: string
            partition:
              type: string
            topic:
              type: string
              nullable: true
            subtopic:
              type: string
              nullable: true
      required:
        - document
        - score
        - snippet
        - provenance

    Source:
      type: object
      properties:
        type:
          type: string
          enum: [canonical, retrieval, generated]
        id:
          type: string
        title:
          type: string
        snippet:
          type: string
        score:
          type: number
      required:
        - type
        - id

    CoachResponse:
      type: object
      properties:
        answer:
          type: string
          description: Generated answer
        verified:
          type: boolean
          description: Whether the answer was verified
        trustScore:
          type: number
          minimum: 0
          maximum: 1
          description: Trust score of the answer
        confidence:
          type: number
          minimum: 0
          maximum: 1
          description: Confidence score of the answer
        sources:
          type: array
          items:
            $ref: '#/components/schemas/Source'
          description: Sources used for the answer
        suggestions:
          type: array
          items:
            type: string
          description: Suggestions if answer is not verified
        metadata:
          type: object
          properties:
            examVariant:
              type: string
              enum: [calc_ab, calc_bc]
            topic:
              type: string
            subtopic:
              type: string
            difficulty:
              type: string
            processingTime:
              type: number
            retryCount:
              type: number
      required:
        - answer
        - verified
        - trustScore
        - confidence
        - sources
        - suggestions
        - metadata

    ReviewCase:
      type: object
      properties:
        id:
          type: string
        question:
          type: string
        answer:
          type: string
        examVariant:
          type: string
          enum: [calc_ab, calc_bc]
        trustScore:
          type: number
        confidence:
          type: number
        sources:
          type: array
          items:
            $ref: '#/components/schemas/Source'
        metadata:
          type: object
        status:
          type: string
          enum: [pending, approved, rejected, needs_revision]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - question
        - answer
        - examVariant
        - trustScore
        - confidence
        - sources
        - metadata
        - status
        - created_at
        - updated_at

security:
  - bearerAuth: []
  - apiKey: []

tags:
  - name: Health
    description: Health check endpoints
  - name: Knowledge Base
    description: Knowledge base search and retrieval
  - name: Coach
    description: VAM coaching and question processing
  - name: Review
    description: Human-in-the-Loop review system
  - name: Webhooks
    description: Webhook endpoints for external services
